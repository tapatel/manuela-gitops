apiVersion: v1
kind: Secret
metadata:
  name: kafka-tls-certificate-and-key
data:
  tls.crt: MIIDfTCCAmWgAwIBAgIUSVDiQNPbH8q2pNTZv8oz8gXW9LswDQYJKoZIhvcNAQELBQAwTjELMAkGA1UEBhMCREUxEDAOBgNVBAsMB01hbnVlbGExLTArBgNVBAMMJCouYXBwcy5lZGdlLW1nbXQtaHViLmVkZ2UuY3NzLXFlLmNvbTAeFw0yMDEwMjAxMzM5MjdaFw0yMTEwMjAxMzM5MjdaME4xCzAJBgNVBAYTAkRFMRAwDgYDVQQLDAdNYW51ZWxhMS0wKwYDVQQDDCQqLmFwcHMuZWRnZS1tZ210LWh1Yi5lZGdlLmNzcy1xZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVz88rQspta/0/vU6HkybMbd6UeRtL0sffbb7/ZfpG5gVNGBuO272AtMcbn0YCKPpr6jMcVcO9tkTmOm8ijV2MD4C7dVTwvzTrQENlX072d1HwNO0p4E+fhqcrSLYwYuGoe9ZyaN2k1nAqoZLreH6yy27IYEF69PFoggKniE8DO69wq3Uz5g2LFvQ01Ub3NrCmXpXhR752LZHRHjrENnZcN1AwNWTsg9zyJiTVO2X75L81txj0SK1r+7JOS4wui769QXDUssrPNIf75hhHB4JF/3BT25k+tOumGLRb15uANuqMdkHJhfGXvz3QD7nOUjWAjiMZFyJLZxwfnPasVrSlAgMBAAGjUzBRMB0GA1UdDgQWBBSV77c+AxPn73J90SejPVRRHc659DAfBgNVHSMEGDAWgBSV77c+AxPn73J90SejPVRRHc659DAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQDQocDHzs0yzNEqQAhy7WOnYhecq+KnSAQ7cc9A4SNAqI8aRAWUTUoKNpH+aCMP5KUtk3VUfTmdRRxa6FgU1w9sy47MsGPB4I+eiFpFPsM88NwrSp7fkoge/4nm1YUfcDJ3xyXf/Khvo8dTUP8Ln48RyBynNUzAumEdZN2NIv2baB7izV4qOGgFiFwlnCtqvUWCfIlOVs9XbCnyCT5fx/scIn//28/VBPqcMWU1yApPpJQCxEwRd2HksbXmW1Bi1ABs25A0LyjxZp/EM6/HZsaklDG5vcf2BPvq2t8e2+QUx8P3pkOodQPpls+eLqtJcE81hLv6OutNhwJv9v8yQb0k
  tls.key: MIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDVz88rQspta/0/vU6HkybMbd6UeRtL0sffbb7/ZfpG5gVNGBuO272AtMcbn0YCKPpr6jMcVcO9tkTmOm8ijV2MD4C7dVTwvzTrQENlX072d1HwNO0p4E+fhqcrSLYwYuGoe9ZyaN2k1nAqoZLreH6yy27IYEF69PFoggKniE8DO69wq3Uz5g2LFvQ01Ub3NrCmXpXhR752LZHRHjrENnZcN1AwNWTsg9zyJiTVO2X75L81txj0SK1r+7JOS4wui769QXDUssrPNIf75hhHB4JF/3BT25k+tOumGLRb15uANuqMdkHJhfGXvz3QD7nOUjWAjiMZFyJLZxwfnPasVrSlAgMBAAECggEBALzBjfJyL4U0PcoElQxpY2o8YLCQzgE9XwinuWN9otrufKWX79RJt92lOtXu4X5MsO+OPXr5WCnmfKMH2U8WoAxjL1HO/qLfGpfJDvaykmJR6nt2Lh23EnQSCwjSU00aLn9wfFxaqbm5OiLYq3zHzoqHwBCTsZscHPcXN8KxOpftfvZ/ahRe9DbTu+ZPDmz3jUP/weGx1+EW+B7VMdN439m9N5CNcLzqOuqf6btPfdBQs/SsHuIlHLIS7PURUJPaHis5kI4pjsPSg+MWq9oi9+yIrDuIjfddsThfFDPWiN5MNGzdxzBFimM+SPQpuO4wi4Qg26CVb8yO6EYgE5Wo9yECgYEA8AoMYRKmPjxHzQMjPPG30vSp4JFNT1QW3kHPMfTZdxMtRS0U2yv1xeKOJWsllnIuBoXCGzkCHdP58SPy7biT1BnDQrfwjLB8TL8CznH+LJajWpYowz0/yTzO9ktRv9GQC6dLnlod9NjCWScBS2yLHGOyS9o4C4gfQVSgzSkEAS0CgYEA5AdQ6ekKyBVRu1C1WZmBooQItRNuja+fTwkua+OxEc3tD1PLOD4/aShQt/abu4xJYaSW7+zgZlCdr3LtgwSgaLyZjoX8jTyF8QdLGv9fcGvXLT+gYNlJhZ8mDN1Lettye8Jo3N4axxoW6fxZMMb20d8+PQiujFlrxU1PAvYy/FkCgYEAr767p4sO+nwKGdkVQLa9Xw/RHOFlmBI6GApY1/usCJmayI4kOf/qlzKz3kOfppH8jrv6DRJlMU+VLO+kGlbMrTsbkkq4LVm9+DbVqC8f6Kd1/In6WFAM1prV8M/ej7GwZEfdfpf+XNkjGkELmpxjEasQzKZ96DuGnr+GaA+CphUCgYEAnpucI2dukWeK1yC3U6BbtD/kkpb2keTziZUYTgEtO/Yhi0S8mN1rW+in5J3LCvP0Ys+KEU6Rc3llhREKtdQ1A0UUBjeaSF8tx05MZnX024yXOikEk/jvk9r0K4SNqOIVSpIaQG7Y715tS8mz/CKYsbh3YRq11neoZ69zYtr+8dkCgYEAh2hBg0yjMo98lGHu86YBkkdmSnETdchI5a6knZXfkNIoY5RLtpJOHH1ia9b5NreRjOukmAwgG9+/5rk10g7ajgZjxwRnX0F3n8KObkjQmogaYhTyvFIMHkRDOkZpsvCDuKEgZns3QtcceCojyuxA3DvKGSepRpL6LrrsRXYTErc=

# It is beyond a bad practise to check in private keys into git repos
# there are a number of approaches to make this work, e.g. by encryption (e.g. sealedsecrets)
# or by storing a reference to a key in a key vault. 

# Since this is just a demo and this self-signed wildcard cert
# is not used beyond the kafka connectivity between mirrormaker and the kafka cluster
# which run behind a firewall we find the risk of the private key leaking to be 
# acceptable.

# This secret was created by running
# export MYDOMAIN=apps.edge-mgmt-hub.edge.css-qe.com
# openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem -subj "/C=DE/OU=Manuela/CN=*.${MYDOMAIN}"
# oc create secret tls kafka-tls-certificate-and-key --key key.pem --cert certificate.pem