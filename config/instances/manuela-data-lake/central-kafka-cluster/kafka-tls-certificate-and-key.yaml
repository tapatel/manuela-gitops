apiVersion: v1
kind: Secret
metadata:
  name: kafka-tls-certificate-and-key
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdvQ0NRRE5Ua1IyMk11RnhUQU5CZ2txaGtpRzl3MEJBUXNGQURCVE1Rc3dDUVlEVlFRR0V3SkUKUlRFUU1BNEdBMVVFQ3d3SFRXRnVkV1ZzWVRFeU1EQUdBMVVFQXd3cEtpNWhjSEJ6TG05amNETXVjM1J2Y20xegphR2xtZEM1amIyVXViWFZqTG5KbFpHaGhkQzVqYjIwd0hoY05NakF3TnpJNU1UUXpOak00V2hjTk1qRXdOekk1Ck1UUXpOak00V2pCVE1Rc3dDUVlEVlFRR0V3SkVSVEVRTUE0R0ExVUVDd3dIVFdGdWRXVnNZVEV5TURBR0ExVUUKQXd3cEtpNWhjSEJ6TG05amNETXVjM1J2Y20xemFHbG1kQzVqYjJVdWJYVmpMbkpsWkdoaGRDNWpiMjB3Z2dFaQpNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURhOXFWOGZHTndFejE2ZzEwc1ZnNFF4RC9wCnlYQnVZaGdJNkF0RWZDMGJoWjhYNklGWkRpV1ZscGNuT2dGYzltQlc0ZUhMZjYvVDcyWkU1MEhkeEJFeXVuYTcKZXZlTk1VNnRlWlliZDhMMVBMMmJvTU8zNzRpa1FqaSt0NTVDaExQY0J2dUJBelZiQzBBUUF4Uk5uMnQyZ1JLTgpEQnFzZjhYSWpaRzdkTWZUNEVEekZqSHFkVGpRYkZKWEQ4dEF4M1BiTS8xdmlBZVIzNUxYbWtaWVlZS29jNUlLCjBjcjdwYmlud1RvRXBPYW9wSGk3WHUydmg5Zlp5MUMyaUNwNFdONWk5VGtVZzdMOUEwV2xnVzdCNkJGdU9HTGEKbVpqRnRTeEdvanMzRVdwWjZpZnBxL1FKNTI4VEEwVVZpaDZsVEdHYkNjUUQ2TDFQaDJXb3kzVk55WmFWQWdNQgpBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQU1ZQmVONnlLQWRpQWtQKzI0bGtEM29RaS8zYjJHMHRsQjJ4CldzWHRqeWpEYkFYUXZSNUJmVTVGNXpyUUNQalRlYm8xMTlHT0IycnF1MFUwTnUzbnlUWFNxMjJHeEQ3VFo4SnUKSTRLSVJFTERmV2V3QndwUktHV0YwUEtIUmVRTWFSZUc2RVVDZTVRWUlLWFRHcUc0eXpFdU5Oc09IWW04RkFZUApBZi9iUDN3TjRtMXU5YzBCVFF3OWFMSENQMExXSldQdFIrUDlOY1Y2MVdyRWVISmlpc3QzbXU3eHZucVZvTGgvCnRnamlPeUx3QW9qdzBPSFRXLzdwbEdUTHFtV2RyRHVLcThBS3V2Z2JFZUU4bzczZXNkQlJQSGRyOGRPc1pCK1EKcmVuU2FXaWloSENMeGVpZnpyNEZZVVBjbXZvaW5xTEFvSFBwQm93V3dLcnpkMHlQS0tzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRGE5cVY4ZkdOd0V6MTYKZzEwc1ZnNFF4RC9weVhCdVloZ0k2QXRFZkMwYmhaOFg2SUZaRGlXVmxwY25PZ0ZjOW1CVzRlSExmNi9UNzJaRQo1MEhkeEJFeXVuYTdldmVOTVU2dGVaWWJkOEwxUEwyYm9NTzM3NGlrUWppK3Q1NUNoTFBjQnZ1QkF6VmJDMEFRCkF4Uk5uMnQyZ1JLTkRCcXNmOFhJalpHN2RNZlQ0RUR6RmpIcWRUalFiRkpYRDh0QXgzUGJNLzF2aUFlUjM1TFgKbWtaWVlZS29jNUlLMGNyN3BiaW53VG9FcE9hb3BIaTdYdTJ2aDlmWnkxQzJpQ3A0V041aTlUa1VnN0w5QTBXbApnVzdCNkJGdU9HTGFtWmpGdFN4R29qczNFV3BaNmlmcHEvUUo1MjhUQTBVVmloNmxUR0diQ2NRRDZMMVBoMldvCnkzVk55WmFWQWdNQkFBRUNnZ0VBQW1EN20wYWVyZkVIa2ZVclpmZnBYelZDbkgrYndSYy91NWtKeGt5ekVNRjYKNFArZHFDSUhOb0RVVTVERnd3VEtOeWR0RkpEbWtCN2h0WTN0b1VNb0RLMEo3UytBMFAvZ0l2SlhOeVV0OFF3Zgo0emp6NTJPcTBGNEh6OHFlNVlvYmlpQnBTeFdGMXQ5Z2Fzd2R4Rm9mQ01LT09Rb1FvQjhqUHZLS3lzYVNCVE05ClhFVmpKWnp1NHJwM1pCY3JJdHFvbVVtc0MwMVVwWUJqT04wRmpVdXJSdENsT1dZUk1Ydnh3L3hhRUQ1azlNTmQKUGRUZ3BRK0hPbkJoRjBtN1dqamluam1xTHhERW1rQjZCOUMvU0NnY2twcjUzOGx4SDBBTTNPbXMrY0FORmVRdApWVGZYbHFyOFhJUGI2aDZXZHM2VUtqTVEwSE05anpjWE9PRVE2OTJLWVFLQmdRRHdlNEIxZDA3S1YyMFdxRE1zClR3Mjg2NytNZUJ1ZnhjQlNFaTMra0daeHlBbkphYmZWSXZ3ZG5vU1M5MWIvYUhrelBVYUJ3QXdKTUxEUWxBTkcKc0pQc2xXTFdTNi92OHFjazFQWEN6NFBQN3hkQ2hudVJOMjlOWERPdUJISFhYcVdRS3F3aEFzVEhsUWdiOGFlSwpnbCt0QUpvcGwzL0wxWjNxTk4vNFpVSXNQd0tCZ1FEcEY2ejA1aTF4ZUlMSkpVLzBnbGFzNHlIOEh6TGxWMEdDCmVveDltWVR0ZDNQV1JyL2NIcm15RW9zRVVpeGtyVnR6RmNodUhYR2l6cU5NZXF3MXhqN2p2YVpmcFQrL0ZBb00Ka3lSeUdBREI5VGxuUHNwSmR0Y1dxTXpMUHpLd2ZFQ09uWCtJeHUzS01EMHAzZk9nbENycSthSkxmeFkrUVphZwoyMTNsaituWUt3S0JnQ1g5VEpqQjVUZC93aUx2SlU1ZG1xejZqUUx5d21KbUNmQ3RJSWp6Wk11YXJ6a2JNMGcvClE1YW1RUWs2ZTRyVGhUbjc5eFJ1TXppTWNaSXhuNmJlSkRBZWxVT0hKMTcvZFRvVFRsT2RGcFNWajVZWnlwRngKTVdzR0lyL2R3ZUlrK0lDaXpSaFY2S0lpditveUxhWnEzQlJuWVBNckZLd3RyY21lMnJiUndEZGZBb0dCQUlkNApMQncxUHNvSStUSUFUb1RUejU0eGI4b0JNK3BZbVFsRlFpdXBNcmwweUUwTDEyd09LMnlVSEZtSmpLV0NuM2kyCmUwT01OMFFoQm9WbmNuamFYQ2l1UzJpaE9QaExwRCtFc1JUaVlHWlpxR0FaL1NWUFBWaTlDREZEN0tqbnZmbGwKRGY4blpvSXhJUXNaSlFQNXVTdlJwQUp1dlRXM2x0eXNRZGt1bUFEN0FvR0FmYnpwRlJuWXBEenZnc3lMdHh6bwpnekpLV2l3UnVjRFpSbWxFNG9RZk5UUi9QNWpLUGZEQ3Z5MHRoK1loSmFVTDFDYnhMWnFJT05DaTFmUS95V0dmCk5odmpuNk5GR0VLUnpMWmdDMVpZdEhwbjU1a1M2S1F1ekxNMjVtamczZzhKYmdlaDVmZi9PZ0w1RzZXdVBHb3gKVXBzQjBIMVVLWmlrM29LRWxoSkRaKzA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

# It is beyond a bad practise to check in private keys into git repos
# there are a number of approaches to make this work, e.g. by encryption (e.g. sealedsecrets)
# or by storing a reference to a key in a key vault. 

# Since this is just a demo and this self-signed wildcard cert
# is not used beyond the kafka connectivity between mirrormaker and the kafka cluster
# which run behind a firewall we find the risk of the private key leaking to be 
# acceptable.

# This secret was created by running
# export MYDOMAIN=apps.edge.css-qe.com
# openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem -subj "/C=DE/OU=Manuela/CN=*.${MYDOMAIN}"
# oc create secret tls kafka-tls-certificate-and-key --key key.pem --cert certificate.pem